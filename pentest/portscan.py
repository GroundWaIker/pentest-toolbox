"""Contains scripts for portscanning"""
import sys
import socket
from datetime import datetime
import pyfiglet
from progressbar import progressbar
def main():
    """Scans a range of ports on the given IP and prints to file"""
    ascii_banner = pyfiglet.figlet_format("GRWLK Scanner")
    print("=" * 60)
    print(ascii_banner)

    if len(sys.argv) == 2:
        target = socket.gethostbyname(sys.argv[1])
    else:
        print("Invalid argument amount")

    print("=" * 60)
    print("Scanning Target: ", target)
    print("Scanning started at: ", str(datetime.now()))
    print("=" * 60)
    start_time = datetime.now()
    output_path = "/home/kali/Documents/Scanresults/" + start_time.strftime("%Y-%m-%d_%H:%M:%S") + "_"+ target + ".txt"
#    with open(output_path, 'w', encoding="utf-8") as file:
#        file1 = file.read()
    with open(output_path, 'w', encoding="utf-8") as file:
        try:
            print("\n")
            for port in progressbar(range(1,5000), redirect_stdout=True):
                out_str = "Port {} is open!"
                s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
                socket.setdefaulttimeout(1)

                result = s.connect_ex((target,port))
                if result == 0:
                    print(out_str.format(port))
                    file.write(out_str.format(port))
                    file.write("\n")
                s.close()
        except KeyboardInterrupt:
            print("\n Program closing!")
            sys.exit()

        except socket.gaierror:
            print("\n Hostname could not be resolved!")
            sys.exit()

        except socket.error:
            print("\n Server not responding!")
            sys.exit()

if __name__ == "__main__":
    main()
